[{"path":"https://docs.sykdomspulsen.no/spltidy/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"test","title":"test","text":"hello test","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/CONTRIBUTING.html","id":"extra","dir":"","previous_headings":"","what":"extra","title":"test","text":"starting point, use tidyverse style guide","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/CONTRIBUTING.html","id":"section","dir":"","previous_headings":"","what":"test","title":"test","text":"implement pre-commit git hooks (richard ) [right now]","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"pull requests?","title":"test","text":"Documentation docs.sykdomspulsen./* (roxygen2/vignettes R-packages .Rmd files sykdomspulsen-org.github.io) done via main branch, pull requests required. Otherwise, every Depends active maintainer package. small change, person turnus check pull requests 0800 1000 next day","code":""},{"path":[]},{"path":[]},{"path":"https://docs.sykdomspulsen.no/spltidy/CONTRIBUTING.html","id":"when-should-i-write-a-function-and-put-it-in-the-package","dir":"","previous_headings":"","what":"WHEN SHOULD I WRITE A FUNCTION AND PUT IT IN THE PACKAGE","title":"test","text":"-> something 3 times? -> want force everyone things 1 way","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"splfmt_rts_data_v1","dir":"Articles","previous_headings":"","what":"splfmt_rts_data_v1","title":"Data format (splfmt_rts_data_v1)","text":"document presents data format splfmt_rts_data_v1. splfmt_rts_data_v1 data format Sykdomspulsen team recommends using real-time surveillance infectious diseases.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"style","dir":"Articles","previous_headings":"","what":"Style","title":"Data format (splfmt_rts_data_v1)","text":"Language English primary language code. Names abbreviations Norwegian kept : data sources msis, daar, sysvak, normomo. Capital letters Capital letters avoided whenever possible. also case filenames (e.g. data.rds preferred data.RDS) snake_case camelCase? Use snake_case. Timestamping file names results (e.g. reports), indicator time files created necessary. allows us find one recent version files names, allows easy tracking Airflow error. e.g. Epidemiologisk_situasjonsrapport_2021-05-31_0659.docx report generated May 31, 2021 06:59 .","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"ordering-of-variables","dir":"Articles","previous_headings":"","what":"Ordering of variables","title":"Data format (splfmt_rts_data_v1)","text":"Sometimes variables need ordered. Variables ordered follows: time location age sex e.g. database table called msis_by_time_location_age_sex filename called 2020_oslo_05-10_male.xlsx","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"time","dir":"Articles","previous_headings":"","what":"Time","title":"Data format (splfmt_rts_data_v1)","text":"Time functions can obtained spltime. Missing time data coded NA. Uncommon/internal use demarcated line text.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"approved-events","dir":"Articles","previous_headings":"Time","what":"Approved events","title":"Data format (splfmt_rts_data_v1)","text":"following approved events:","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"location","dir":"Articles","previous_headings":"","what":"Location","title":"Data format (splfmt_rts_data_v1)","text":"Locations can obtained spldata. Valid locations (location types) available spldata::nor_locations_names(). Uncommon/internal use demarcated line text.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"ages","dir":"Articles","previous_headings":"","what":"Ages","title":"Data format (splfmt_rts_data_v1)","text":"Ages coded characters always contain 3 digits. age range, two ages joined underscore (e.g. 005_010). Use 085p instead >=085 85+, allow easy conversion long wide formatted data. format help data easily sorted, kept right order, generate valid variable names converted wide-format. Missing ages coded “missing”.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"sex","dir":"Articles","previous_headings":"","what":"Sex","title":"Data format (splfmt_rts_data_v1)","text":"Sex coded characters. Missing sexes coded “missing”.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"unified-columns","dir":"Articles","previous_headings":"","what":"Unified columns","title":"Data format (splfmt_rts_data_v1)","text":"datasets splverse format splfmt_rts_data_v1 contain 16 columns. Time conversion functions can found package spltime.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"smart-assignment","dir":"Articles","previous_headings":"Unified columns","what":"Smart assignment","title":"Data format (splfmt_rts_data_v1)","text":"splfmt_rts_data_v1 smart assignment time geography. variables bold assigned using :=, listed variables automatically imputed. location_code: granularity_geo country_iso3 isoyear: granularity_time isoweek isoyearweek season seasonweek calyear calmonth calyearmonth date isoyearweek: granularity_time isoyear isoweek season seasonweek calyear calmonth calyearmonth date date: granularity_time isoyear isoweek isoyearweek season seasonweek calyear calmonth calyearmonth","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"context-specific-columns","dir":"Articles","previous_headings":"","what":"Context-specific columns","title":"Data format (splfmt_rts_data_v1)","text":"Variable names part unified columns called context-specific columns, made 2 mandatory (description, format) 5 optional (time, statistics, forecast, censored/status, formatted) sections, separated underscores. format follows: [blah] indicates optional argument. rare optional arguments used time.","code":"description[_time][_statistics]_format[_forecast][_censored/status][_formatted]"},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"examples","dir":"Articles","previous_headings":"Context-specific columns","what":"Examples","title":"Data format (splfmt_rts_data_v1)","text":"examples, description, time, statistics, format, censor/status sections separated /. example relating death nowcasting: deaths_registered/_n: Number registered deaths. deaths_nowcasted/_n: Number registered deaths, corrected registration delay (nowcasting). deaths_nowcasted/_n_forecast: ‘deaths_nowcasted_n’ forecasted (.e. nowcasted)? deaths_nowcasted/_n/_censored: ‘deaths_nowcasted_n’ censored? deaths_nowcasted/_n/_status: Status ‘deaths_nowcasted_n’ relation ’deaths_nowcasted_baseline_credintervalobs_q*_n’. deaths_nowcasted/_credintervalobs_q02x5/_n: 2.5th quantile expect real number registered deaths (Bayesian). deaths_nowcasted_baseline/_predinterval_q02x5/_n: 2.5th quantile expected new observation nowcasted deaths (frequentist). deaths_nowcasted_baseline/_predinterval_q97x5/_n: 97.5th quantile expected new observation nowcasted deaths (frequentist). deaths_nowcasted_baseline/_credintervalobs_q02x5/_n: 2.5th quantile expect observation nowcasted deaths (Bayesian). deaths_nowcasted_baseline/_credintervalmean_q02x5/_n: 2.5th quantile mean nowcasted deaths (Bayesian). example relating number covid-19 cases: covid19_cases_regdate/_n: Number covid-19 cases registration date. covid19_cases_testdate/_n: Number covid-19 cases testing date. covid19_cases_testdate/_sum0_13/_n: sum 14 days cases. granularity_time==‘day’, date==‘2022-01-20’, current date ‘2022-02-07’, value sum covid19_cases_testdate_n ‘2022-01-07’ ‘2022-01-20’. granularity_time==‘isoweek’, isoyearweek==‘2022-03’, current date ‘2022-02-07’ (Monday isoyearweek ‘2022-06’) value sum covid19_cases_testdate_n ‘2022-01-10’ (Monday isoyearweek ‘2022-02’) ‘2022-01-23’ (Sunday isoyearweek ‘2022-03’). granularity_time==‘isoweek’, isoyearweek==‘2022-06’, current date ‘2022-02-07’ (Monday isoyearweek ‘2022-06’), value sum covid19_cases_testdate_n last day available data 13 days prior. granularity_time==‘event_covid19_norway_2020_02_21_to_9999_09_09’, value sum covid19_cases_testdate_n last day available data 13 days prior. covid19_cases_testdate/_sum0_999999/_n: sum recorded days cases. covid19_cases_testdate/_sum0_13/_n: Expected number nowcasted deaths (.e. baseline). deaths_nowcasted_baseline/_predinterval_q02x5/_n: 2.5th quantile expected new observation nowcasted deaths (frequentist). deaths_nowcasted_baseline/_predinterval_q97x5/_n: 97.5th quantile expected new observation nowcasted deaths (frequentist). deaths_nowcasted_baseline/_credintervalobs_q02x5/_n: 2.5th quantile expect observation nowcasted deaths (Bayesian). deaths_nowcasted_baseline/_credintervalmean_q02x5/_n: 2.5th quantile mean nowcasted deaths (Bayesian). example relating number covid-19 tests: covid19_testevents/_n: Number covid-19 test events (.e. person getting tested within 7 day period). covid19_testevents_pos/_pr1: Proportion (0-1) covid-19 test events positive. covid19_testevents_pos/_pr100: Percentage (0-100) covid-19 test events positive. covid19_testevents_pos/_sum0_13/_pr100: Percentage (0-100) covid-19 test events positive last 14 days. covid19_testevents_pos/_daymean0_13/_pr100: last 14 days, calculate percentage (0-100) covid-19 test events positive, take mean 14 values. covid19_testevents_pos/_isoweekmean0_13/_pr100: last 7 day periods (0-6 days, 7-13 days), calculate percentage (0-100) covid-19 test events positive, take mean 2 values. example relating vaccination: covid19_vax_administered_dose_1/_n: Number people received first dose day/isoweek/event. corresponding age permanently fixed (person received first dose 21, always received first dose 21). covid19_vax_coverage_dose_1/_n: Number people (last day day/isoweek/event) received 1 dose vaccine. corresponding age fixed last day day/isoweek/event.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"in-action","dir":"Articles","previous_headings":"","what":"In action","title":"Data format (splfmt_rts_data_v1)","text":"","code":"d <- spltidy::generate_test_data()[1:5] spltidy::set_splfmt_rts_data_v1(d)  # Looking at the dataset d[] #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoweek            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:            isoweek            county            nor        county18 #> 5:            isoweek            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2022           3       2022-03 #> 2:          NA            NA            NA        2022           3       2022-03 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2022           3       2022-03 #> 5:          NA            NA            NA        2022           3       2022-03 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>           NA=0 %       NA=0 %    NA=100 %    NA=100 %       NA=100 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2021/2022           26          NA          NA             NA #> 2:     2021/2022           26          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2021/2022           26          NA          NA             NA #> 5:     2021/2022           26          NA          NA             NA #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2022-01-23           4 #> 2:   2022-01-23           5 #> 3:   2022-01-23           6 #> 4:   2022-01-23           4 #> 5:   2022-01-23           4  # Smart assignment of time columns (note how granularity_time, isoyear, isoyearweek, date all change) d[1, isoyearweek := \"2021-01\"] d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoweek            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:            isoweek            county            nor        county18 #> 5:            isoweek            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2022           3       2022-03 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2022           3       2022-03 #> 5:          NA            NA            NA        2022           3       2022-03 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>           NA=0 %       NA=0 %    NA=100 %    NA=100 %       NA=100 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:     2021/2022           26          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2021/2022           26          NA          NA             NA #> 5:     2021/2022           26          NA          NA             NA #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           4 #> 2:   2022-01-23           5 #> 3:   2022-01-23           6 #> 4:   2022-01-23           4 #> 5:   2022-01-23           4  # Smart assignment of time columns (note how granularity_time, isoyear, isoyearweek, date all change) d[2, isoyear := 2019] d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoyear            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:            isoweek            county            nor        county18 #> 5:            isoweek            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2019          52       2019-52 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2022           3       2022-03 #> 5:          NA            NA            NA        2022           3       2022-03 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>          NA=20 %      NA=20 %    NA=100 %    NA=100 %       NA=100 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2021/2022           26          NA          NA             NA #> 5:     2021/2022           26          NA          NA             NA #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           4 #> 2:   2019-12-29           5 #> 3:   2022-01-23           6 #> 4:   2022-01-23           4 #> 5:   2022-01-23           4  # Smart assignment of time columns (note how granularity_time, isoyear, isoyearweek, date all change) d[4:5, date := as.Date(\"2020-01-01\")] d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoyear            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:                day            county            nor        county18 #> 5:                day            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2019          52       2019-52 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2020           1       2020-01 #> 5:          NA            NA            NA        2020           1       2020-01 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>          NA=20 %      NA=20 %     NA=60 %     NA=60 %        NA=60 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2019/2020           24        2020           1       2020-M01 #> 5:     2019/2020           24        2020           1       2020-M01 #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           4 #> 2:   2019-12-29           5 #> 3:   2022-01-23           6 #> 4:   2020-01-01           4 #> 5:   2020-01-01           4  # Smart assignment fails when multiple time columns are set d[1, c(\"isoyear\", \"isoyearweek\") := .(2021, \"2021-01\")] #> Warning in `[.splfmt_rts_data_v1`(d, 1, `:=`(c(\"isoyear\", \"isoyearweek\"), : #> Multiple time variables specified. Smart-assignment disabled. d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoyear            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:                day            county            nor        county18 #> 5:                day            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2019          52       2019-52 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2020           1       2020-01 #> 5:          NA            NA            NA        2020           1       2020-01 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>          NA=20 %      NA=20 %     NA=60 %     NA=60 %        NA=60 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2019/2020           24        2020           1       2020-M01 #> 5:     2019/2020           24        2020           1       2020-M01 #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           4 #> 2:   2019-12-29           5 #> 3:   2022-01-23           6 #> 4:   2020-01-01           4 #> 5:   2020-01-01           4  # Smart assignment of geo columns d[1, c(\"location_code\") := .(\"norge\")] d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            nation            nor           norge #> 2:            isoyear            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:                day            county            nor        county18 #> 5:                day            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2019          52       2019-52 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2020           1       2020-01 #> 5:          NA            NA            NA        2020           1       2020-01 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>          NA=20 %      NA=20 %     NA=60 %     NA=60 %        NA=60 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2019/2020           24        2020           1       2020-M01 #> 5:     2019/2020           24        2020           1       2020-M01 #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           4 #> 2:   2019-12-29           5 #> 3:   2022-01-23           6 #> 4:   2020-01-01           4 #> 5:   2020-01-01           4  # Collapsing down to different levels, and healing the dataset # (so that it can be worked on further with regards to real time surveillance) d[, .(deaths_n = sum(deaths_n), location_code = \"norge\"), keyby = .(granularity_time)] %>%   spltidy::create_unified_columns() %>%   print() #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:                day            nation            nor           norge #> 2:            isoweek            nation            nor           norge #> 3:            isoyear            nation            nor           norge #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %    NA=100 %    NA=100 %      NA=100 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA          NA          NA            NA #> 2:          NA            NA            NA          NA          NA            NA #> 3:          NA            NA            NA          NA          NA            NA #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>         NA=100 %     NA=100 %    NA=100 %    NA=100 %       NA=100 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:            NA           NA          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:            NA           NA          NA          NA             NA #>  #>      [unified]   [context] #>         <Date>   <integer> #>       NA=100 %      NA=0 % #>           date    deaths_n #> 1:          NA           8 #> 2:          NA          10 #> 3:          NA           5  # Collapsing down to different levels, without healing the dataset and without # removing the class splfmt_rts_data_v1 (this is uncommon) d[, .(deaths_n = sum(deaths_n), location_code = \"norge\"), keyby = .(granularity_time)] %>%   print() #>             [unified]   [context]       [unified] #>           <character>   <integer>     <character> #>                NA=0 %      NA=0 %          NA=0 % #>      granularity_time    deaths_n   location_code #> 1:                day           8           norge #> 2:            isoweek          10           norge #> 3:            isoyear           5           norge  # Collapsing to different levels, and removing the class splfmt_rts_data_v1 because # it is going to be used in new output/analyses d[, .(deaths_n = sum(deaths_n), location_code = \"norge\"), keyby = .(granularity_time)] %>%   spltidy::remove_class_splfmt_rts_data() %>%   print() #>    granularity_time deaths_n location_code #> 1:              day        8         norge #> 2:          isoweek       10         norge #> 3:          isoyear        5         norge"},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"expand-time-to","dir":"Articles","previous_headings":"","what":"Expand time to","title":"Data format (splfmt_rts_data_v1)","text":"Sometimes need expand number rows dataset future time.","code":"spltidy::generate_test_data() %>%   spltidy::set_splfmt_rts_data_v1() %>%   dplyr::filter(location_code == \"county03\") %>%   spltidy::expand_time_to(max_isoyearweek = \"2022-08\") %>%   print() #>     granularity_time granularity_geo country_iso3 location_code border     age #>  1:          isoweek          county          nor      county03     NA    <NA> #>  2:          isoweek          county          nor      county03     NA    <NA> #>  3:          isoweek          county          nor      county03     NA    <NA> #>  4:          isoweek          county          nor      county03     NA    <NA> #>  5:          isoweek          county          nor      county03     NA    <NA> #>  6:          isoweek          county          nor      county03     NA    <NA> #>  7:          isoweek          county          nor      county03     NA   total #>  8:          isoweek          county          nor      county03     NA   total #>  9:          isoweek          county          nor      county03     NA   total #> 10:          isoweek          county          nor      county03     NA   total #> 11:          isoweek          county          nor      county03     NA   total #> 12:          isoweek          county          nor      county03     NA   total #> 13:          isoweek          county          nor      county03     NA 000_005 #> 14:          isoweek          county          nor      county03     NA 000_005 #> 15:          isoweek          county          nor      county03     NA 000_005 #> 16:          isoweek          county          nor      county03     NA 000_005 #> 17:          isoweek          county          nor      county03     NA 000_005 #> 18:          isoweek          county          nor      county03     NA 000_005 #>       sex isoyear isoweek isoyearweek    season seasonweek calyear calmonth #>  1:  <NA>    2022       3     2022-03 2021/2022         26      NA       NA #>  2:  <NA>    2022       4     2022-04 2021/2022         27      NA       NA #>  3:  <NA>    2022       5     2022-05 2021/2022         28      NA       NA #>  4:  <NA>    2022       6     2022-06 2021/2022         29      NA       NA #>  5:  <NA>    2022       7     2022-07 2021/2022         30      NA       NA #>  6:  <NA>    2022       8     2022-08 2021/2022         31      NA       NA #>  7: total    2022       3     2022-03 2021/2022         26      NA       NA #>  8: total    2022       4     2022-04 2021/2022         27      NA       NA #>  9: total    2022       5     2022-05 2021/2022         28      NA       NA #> 10: total    2022       6     2022-06 2021/2022         29      NA       NA #> 11: total    2022       7     2022-07 2021/2022         30      NA       NA #> 12: total    2022       8     2022-08 2021/2022         31      NA       NA #> 13: total    2022       3     2022-03 2021/2022         26      NA       NA #> 14: total    2022       4     2022-04 2021/2022         27      NA       NA #> 15: total    2022       5     2022-05 2021/2022         28      NA       NA #> 16: total    2022       6     2022-06 2021/2022         29      NA       NA #> 17: total    2022       7     2022-07 2021/2022         30      NA       NA #> 18: total    2022       8     2022-08 2021/2022         31      NA       NA #>     calyearmonth       date deaths_n #>  1:         <NA> 2022-01-23        5 #>  2:         <NA> 2022-01-30       NA #>  3:         <NA> 2022-02-06       NA #>  4:         <NA> 2022-02-13       NA #>  5:         <NA> 2022-02-20       NA #>  6:         <NA> 2022-02-27       NA #>  7:         <NA> 2022-01-23        5 #>  8:         <NA> 2022-01-30       NA #>  9:         <NA> 2022-02-06       NA #> 10:         <NA> 2022-02-13       NA #> 11:         <NA> 2022-02-20       NA #> 12:         <NA> 2022-02-27       NA #> 13:         <NA> 2022-01-23        5 #> 14:         <NA> 2022-01-30       NA #> 15:         <NA> 2022-02-06       NA #> 16:         <NA> 2022-02-13       NA #> 17:         <NA> 2022-02-20       NA #> 18:         <NA> 2022-02-27       NA"},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"time-series","dir":"Articles","previous_headings":"","what":"Time series","title":"Data format (splfmt_rts_data_v1)","text":"might also need identify many time series one dataset.","code":"spltidy::generate_test_data() %>%   spltidy::set_splfmt_rts_data_v1() %>%   spltidy::unique_time_series() #>     granularity_time granularity_geo country_iso3 location_code border     age #>  1:          isoweek          county          nor      county42     NA    <NA> #>  2:          isoweek          county          nor      county34     NA    <NA> #>  3:          isoweek          county          nor      county15     NA    <NA> #>  4:          isoweek          county          nor      county18     NA    <NA> #>  5:          isoweek          county          nor      county03     NA    <NA> #>  6:          isoweek          county          nor      county11     NA    <NA> #>  7:          isoweek          county          nor      county54     NA    <NA> #>  8:          isoweek          county          nor      county50     NA    <NA> #>  9:          isoweek          county          nor      county38     NA    <NA> #> 10:          isoweek          county          nor      county46     NA    <NA> #> 11:          isoweek          county          nor      county30     NA    <NA> #> 12:          isoweek          county          nor      county42     NA   total #> 13:          isoweek          county          nor      county34     NA   total #> 14:          isoweek          county          nor      county15     NA   total #> 15:          isoweek          county          nor      county18     NA   total #> 16:          isoweek          county          nor      county03     NA   total #> 17:          isoweek          county          nor      county11     NA   total #> 18:          isoweek          county          nor      county54     NA   total #> 19:          isoweek          county          nor      county50     NA   total #> 20:          isoweek          county          nor      county38     NA   total #> 21:          isoweek          county          nor      county46     NA   total #> 22:          isoweek          county          nor      county30     NA   total #> 23:          isoweek          county          nor      county42     NA 000_005 #> 24:          isoweek          county          nor      county34     NA 000_005 #> 25:          isoweek          county          nor      county15     NA 000_005 #> 26:          isoweek          county          nor      county18     NA 000_005 #> 27:          isoweek          county          nor      county03     NA 000_005 #> 28:          isoweek          county          nor      county11     NA 000_005 #> 29:          isoweek          county          nor      county54     NA 000_005 #> 30:          isoweek          county          nor      county50     NA 000_005 #> 31:          isoweek          county          nor      county38     NA 000_005 #> 32:          isoweek          county          nor      county46     NA 000_005 #> 33:          isoweek          county          nor      county30     NA 000_005 #>     granularity_time granularity_geo country_iso3 location_code border     age #>       sex time_series_id #>  1:  <NA>              1 #>  2:  <NA>              2 #>  3:  <NA>              3 #>  4:  <NA>              4 #>  5:  <NA>              5 #>  6:  <NA>              6 #>  7:  <NA>              7 #>  8:  <NA>              8 #>  9:  <NA>              9 #> 10:  <NA>             10 #> 11:  <NA>             11 #> 12: total             12 #> 13: total             13 #> 14: total             14 #> 15: total             15 #> 16: total             16 #> 17: total             17 #> 18: total             18 #> 19: total             19 #> 20: total             20 #> 21: total             21 #> 22: total             22 #> 23: total             23 #> 24: total             24 #> 25: total             25 #> 26: total             26 #> 27: total             27 #> 28: total             28 #> 29: total             29 #> 30: total             30 #> 31: total             31 #> 32: total             32 #> 33: total             33 #>       sex time_series_id"},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Data format (splfmt_rts_data_v1)","text":"need way easily summarize data structure dataset.","code":"spltidy::generate_test_data() %>%   spltidy::set_splfmt_rts_data_v1() %>%   summary() #>  #> granularity_time #> ✅ No errors #>  #> granularity_geo #> ✅ No errors #>  #> country_iso3 #> ✅ No errors #>  #> location_code #> ✅ No errors #>  #> border #> ❌ Errors: #> - NA exists (not allowed) #>  #> age #> ✅ No errors #>  #> sex #> ✅ No errors #>  #> isoyear #> ✅ No errors #>  #> isoweek #> ✅ No errors #>  #> isoyearweek #> ✅ No errors #>  #> season #> ✅ No errors #>  #> seasonweek #> ✅ No errors #>  #> calyear #> ✅ No errors #>  #> calmonth #> ✅ No errors #>  #> calyearmonth #> ✅ No errors #>  #> date #> ✅ No errors #> granularity_time (character): #>  - isoweek (n = 33) #> granularity_geo (character): #>  - county (n = 33) #> country_iso3 (character): #>  - nor (n = 33) #> location_code (character) #> border (integer): #>  - <NA> (n = 33) #> age (character): #>  - <NA>    (n = 11) #>  - 000_005 (n = 11) #>  - total   (n = 11) #> sex (character): #>  - <NA>  (n = 11) #>  - total (n = 22) #> isoyear (integer): #>  - 2022 (n = 33) #> isoweek (integer) #> isoyearweek (character) #> season (character): #>  - 2021/2022 (n = 33) #> seasonweek (numeric) #> calyear (integer) #> calmonth (integer) #> calyearmonth (character) #> date (Date) #> deaths_n (integer)"},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"identifying-data-structure-of-one-column","dir":"Articles","previous_headings":"","what":"Identifying data structure of one column","title":"Data format (splfmt_rts_data_v1)","text":"need way easily summarize data structure one column inside dataset.","code":"spltidy::generate_test_data() %>%   spltidy::set_splfmt_rts_data_v1() %>%   spltidy::identify_data_structure(\"deaths_n\") %>%   plot()"},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/splfmt_rts_data_v1.html","id":"reference-location","dir":"Articles","previous_headings":"","what":"Reference (Location)","title":"Data format (splfmt_rts_data_v1)","text":"Locations can obtained spldata. Valid locations (location types) available spldata::nor_locations_names(). list reference table valid location_codes location_name_description_nbs (two commonly used locations).","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/spltidy.html","id":"splfmt_rts_data_v1","dir":"Articles","previous_headings":"","what":"splfmt_rts_data_v1","title":"Introduction to spltidy","text":"splfmt_rts_data_v1 (vignette(\"splfmt_rts_data_v1\", package = \"spltidy\")) data format real-time surveillance.","code":"d <- spltidy::generate_test_data() spltidy::set_splfmt_rts_data_v1(d)  # Looking at the dataset d[] #>              [unified]         [unified]      [unified]       [unified] #>            <character>       <character>    <character>     <character> #>                 NA=0 %            NA=0 %         NA=0 %          NA=0 % #>       granularity_time   granularity_geo   country_iso3   location_code #>  1:            isoweek            county            nor        county42 #>  2:            isoweek            county            nor        county34 #>  3:            isoweek            county            nor        county15 #>  4:            isoweek            county            nor        county18 #>  5:            isoweek            county            nor        county03 #>  6:            isoweek            county            nor        county11 #>  7:            isoweek            county            nor        county54 #>  8:            isoweek            county            nor        county50 #>  9:            isoweek            county            nor        county38 #> 10:            isoweek            county            nor        county46 #> 11:            isoweek            county            nor        county30 #> 12:            isoweek            county            nor        county42 #> 13:            isoweek            county            nor        county34 #> 14:            isoweek            county            nor        county15 #> 15:            isoweek            county            nor        county18 #> 16:            isoweek            county            nor        county03 #> 17:            isoweek            county            nor        county11 #> 18:            isoweek            county            nor        county54 #> 19:            isoweek            county            nor        county50 #> 20:            isoweek            county            nor        county38 #> 21:            isoweek            county            nor        county46 #> 22:            isoweek            county            nor        county30 #> 23:            isoweek            county            nor        county42 #> 24:            isoweek            county            nor        county34 #> 25:            isoweek            county            nor        county15 #> 26:            isoweek            county            nor        county18 #> 27:            isoweek            county            nor        county03 #> 28:            isoweek            county            nor        county11 #> 29:            isoweek            county            nor        county54 #> 30:            isoweek            county            nor        county50 #> 31:            isoweek            county            nor        county38 #> 32:            isoweek            county            nor        county46 #> 33:            isoweek            county            nor        county30 #>  #>       [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>       <integer>   <character>   <character>   <integer>   <integer>   <character> #>        NA=100 %       NA=33 %       NA=33 %      NA=0 %      NA=0 %        NA=0 % #>          border           age           sex     isoyear     isoweek   isoyearweek #>  1:          NA            NA            NA        2022           3       2022-03 #>  2:          NA            NA            NA        2022           3       2022-03 #>  3:          NA            NA            NA        2022           3       2022-03 #>  4:          NA            NA            NA        2022           3       2022-03 #>  5:          NA            NA            NA        2022           3       2022-03 #>  6:          NA            NA            NA        2022           3       2022-03 #>  7:          NA            NA            NA        2022           3       2022-03 #>  8:          NA            NA            NA        2022           3       2022-03 #>  9:          NA            NA            NA        2022           3       2022-03 #> 10:          NA            NA            NA        2022           3       2022-03 #> 11:          NA            NA            NA        2022           3       2022-03 #> 12:          NA         total         total        2022           3       2022-03 #> 13:          NA         total         total        2022           3       2022-03 #> 14:          NA         total         total        2022           3       2022-03 #> 15:          NA         total         total        2022           3       2022-03 #> 16:          NA         total         total        2022           3       2022-03 #> 17:          NA         total         total        2022           3       2022-03 #> 18:          NA         total         total        2022           3       2022-03 #> 19:          NA         total         total        2022           3       2022-03 #> 20:          NA         total         total        2022           3       2022-03 #> 21:          NA         total         total        2022           3       2022-03 #> 22:          NA         total         total        2022           3       2022-03 #> 23:          NA       000_005         total        2022           3       2022-03 #> 24:          NA       000_005         total        2022           3       2022-03 #> 25:          NA       000_005         total        2022           3       2022-03 #> 26:          NA       000_005         total        2022           3       2022-03 #> 27:          NA       000_005         total        2022           3       2022-03 #> 28:          NA       000_005         total        2022           3       2022-03 #> 29:          NA       000_005         total        2022           3       2022-03 #> 30:          NA       000_005         total        2022           3       2022-03 #> 31:          NA       000_005         total        2022           3       2022-03 #> 32:          NA       000_005         total        2022           3       2022-03 #> 33:          NA       000_005         total        2022           3       2022-03 #>  #>         [unified]    [unified]   [unified]   [unified]      [unified] #>       <character>    <numeric>   <integer>   <integer>    <character> #>            NA=0 %       NA=0 %    NA=100 %    NA=100 %       NA=100 % #>            season   seasonweek     calyear    calmonth   calyearmonth #>  1:     2021/2022           26          NA          NA             NA #>  2:     2021/2022           26          NA          NA             NA #>  3:     2021/2022           26          NA          NA             NA #>  4:     2021/2022           26          NA          NA             NA #>  5:     2021/2022           26          NA          NA             NA #>  6:     2021/2022           26          NA          NA             NA #>  7:     2021/2022           26          NA          NA             NA #>  8:     2021/2022           26          NA          NA             NA #>  9:     2021/2022           26          NA          NA             NA #> 10:     2021/2022           26          NA          NA             NA #> 11:     2021/2022           26          NA          NA             NA #> 12:     2021/2022           26          NA          NA             NA #> 13:     2021/2022           26          NA          NA             NA #> 14:     2021/2022           26          NA          NA             NA #> 15:     2021/2022           26          NA          NA             NA #> 16:     2021/2022           26          NA          NA             NA #> 17:     2021/2022           26          NA          NA             NA #> 18:     2021/2022           26          NA          NA             NA #> 19:     2021/2022           26          NA          NA             NA #> 20:     2021/2022           26          NA          NA             NA #> 21:     2021/2022           26          NA          NA             NA #> 22:     2021/2022           26          NA          NA             NA #> 23:     2021/2022           26          NA          NA             NA #> 24:     2021/2022           26          NA          NA             NA #> 25:     2021/2022           26          NA          NA             NA #> 26:     2021/2022           26          NA          NA             NA #> 27:     2021/2022           26          NA          NA             NA #> 28:     2021/2022           26          NA          NA             NA #> 29:     2021/2022           26          NA          NA             NA #> 30:     2021/2022           26          NA          NA             NA #> 31:     2021/2022           26          NA          NA             NA #> 32:     2021/2022           26          NA          NA             NA #> 33:     2021/2022           26          NA          NA             NA #>  #>        [unified]   [context] #>           <Date>   <integer> #>           NA=0 %      NA=0 % #>             date    deaths_n #>  1:   2022-01-23           7 #>  2:   2022-01-23           3 #>  3:   2022-01-23           3 #>  4:   2022-01-23           2 #>  5:   2022-01-23           1 #>  6:   2022-01-23           5 #>  7:   2022-01-23           6 #>  8:   2022-01-23           5 #>  9:   2022-01-23           5 #> 10:   2022-01-23           7 #> 11:   2022-01-23           4 #> 12:   2022-01-23           7 #> 13:   2022-01-23           3 #> 14:   2022-01-23           3 #> 15:   2022-01-23           2 #> 16:   2022-01-23           1 #> 17:   2022-01-23           5 #> 18:   2022-01-23           6 #> 19:   2022-01-23           5 #> 20:   2022-01-23           5 #> 21:   2022-01-23           7 #> 22:   2022-01-23           4 #> 23:   2022-01-23           7 #> 24:   2022-01-23           3 #> 25:   2022-01-23           3 #> 26:   2022-01-23           2 #> 27:   2022-01-23           1 #> 28:   2022-01-23           5 #> 29:   2022-01-23           6 #> 30:   2022-01-23           5 #> 31:   2022-01-23           5 #> 32:   2022-01-23           7 #> 33:   2022-01-23           4"},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/spltidy.html","id":"smart-assignment","dir":"Articles","previous_headings":"splfmt_rts_data_v1","what":"Smart assignment","title":"Introduction to spltidy","text":"splfmt_rts_data_v1 smart assignment time geography. variables bold assigned using :=, listed variables automatically imputed. location_code: granularity_geo country_iso3 isoyear: granularity_time isoweek isoyearweek season seasonweek calyear calmonth calyearmonth date isoyearweek: granularity_time isoyear isoweek season seasonweek calyear calmonth calyearmonth date date: granularity_time isoyear isoweek isoyearweek season seasonweek calyear calmonth calyearmonth","code":"d <- spltidy::generate_test_data()[1:5] spltidy::set_splfmt_rts_data_v1(d)  # Looking at the dataset d[] #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoweek            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:            isoweek            county            nor        county18 #> 5:            isoweek            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2022           3       2022-03 #> 2:          NA            NA            NA        2022           3       2022-03 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2022           3       2022-03 #> 5:          NA            NA            NA        2022           3       2022-03 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>           NA=0 %       NA=0 %    NA=100 %    NA=100 %       NA=100 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2021/2022           26          NA          NA             NA #> 2:     2021/2022           26          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2021/2022           26          NA          NA             NA #> 5:     2021/2022           26          NA          NA             NA #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2022-01-23           5 #> 2:   2022-01-23           4 #> 3:   2022-01-23           9 #> 4:   2022-01-23           6 #> 5:   2022-01-23           2  # Smart assignment of time columns (note how granularity_time, isoyear, isoyearweek, date all change) d[1,isoyearweek := \"2021-01\"] d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoweek            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:            isoweek            county            nor        county18 #> 5:            isoweek            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2022           3       2022-03 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2022           3       2022-03 #> 5:          NA            NA            NA        2022           3       2022-03 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>           NA=0 %       NA=0 %    NA=100 %    NA=100 %       NA=100 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:     2021/2022           26          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2021/2022           26          NA          NA             NA #> 5:     2021/2022           26          NA          NA             NA #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           5 #> 2:   2022-01-23           4 #> 3:   2022-01-23           9 #> 4:   2022-01-23           6 #> 5:   2022-01-23           2  # Smart assignment of time columns (note how granularity_time, isoyear, isoyearweek, date all change) d[2,isoyear := 2019] d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoyear            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:            isoweek            county            nor        county18 #> 5:            isoweek            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2019          52       2019-52 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2022           3       2022-03 #> 5:          NA            NA            NA        2022           3       2022-03 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>          NA=20 %      NA=20 %    NA=100 %    NA=100 %       NA=100 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2021/2022           26          NA          NA             NA #> 5:     2021/2022           26          NA          NA             NA #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           5 #> 2:   2019-12-29           4 #> 3:   2022-01-23           9 #> 4:   2022-01-23           6 #> 5:   2022-01-23           2  # Smart assignment of time columns (note how granularity_time, isoyear, isoyearweek, date all change) d[4:5,date := as.Date(\"2020-01-01\")] d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoyear            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:                day            county            nor        county18 #> 5:                day            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2019          52       2019-52 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2020           1       2020-01 #> 5:          NA            NA            NA        2020           1       2020-01 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>          NA=20 %      NA=20 %     NA=60 %     NA=60 %        NA=60 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2019/2020           24        2020           1       2020-M01 #> 5:     2019/2020           24        2020           1       2020-M01 #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           5 #> 2:   2019-12-29           4 #> 3:   2022-01-23           9 #> 4:   2020-01-01           6 #> 5:   2020-01-01           2  # Smart assignment fails when multiple time columns are set d[1,c(\"isoyear\",\"isoyearweek\") := .(2021,\"2021-01\")] #> Warning in `[.splfmt_rts_data_v1`(d, 1, `:=`(c(\"isoyear\", \"isoyearweek\"), : #> Multiple time variables specified. Smart-assignment disabled. d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoyear            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:                day            county            nor        county18 #> 5:                day            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2019          52       2019-52 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2020           1       2020-01 #> 5:          NA            NA            NA        2020           1       2020-01 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>          NA=20 %      NA=20 %     NA=60 %     NA=60 %        NA=60 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2019/2020           24        2020           1       2020-M01 #> 5:     2019/2020           24        2020           1       2020-M01 #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           5 #> 2:   2019-12-29           4 #> 3:   2022-01-23           9 #> 4:   2020-01-01           6 #> 5:   2020-01-01           2  # Smart assignment of geo columns d[1,c(\"location_code\") := .(\"norge\")] d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            nation            nor           norge #> 2:            isoyear            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:                day            county            nor        county18 #> 5:                day            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2019          52       2019-52 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2020           1       2020-01 #> 5:          NA            NA            NA        2020           1       2020-01 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>          NA=20 %      NA=20 %     NA=60 %     NA=60 %        NA=60 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2019/2020           24        2020           1       2020-M01 #> 5:     2019/2020           24        2020           1       2020-M01 #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           5 #> 2:   2019-12-29           4 #> 3:   2022-01-23           9 #> 4:   2020-01-01           6 #> 5:   2020-01-01           2  # Collapsing down to different levels, and healing the dataset  # (so that it can be worked on further with regards to real time surveillance) d[, .(deaths_n = sum(deaths_n), location_code = \"norge\"), keyby=.(granularity_time)] %>%   spltidy::create_unified_columns() %>%   print() #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:                day            nation            nor           norge #> 2:            isoweek            nation            nor           norge #> 3:            isoyear            nation            nor           norge #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %    NA=100 %    NA=100 %      NA=100 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA          NA          NA            NA #> 2:          NA            NA            NA          NA          NA            NA #> 3:          NA            NA            NA          NA          NA            NA #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>         NA=100 %     NA=100 %    NA=100 %    NA=100 %       NA=100 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:            NA           NA          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:            NA           NA          NA          NA             NA #>  #>      [unified]   [context] #>         <Date>   <integer> #>       NA=100 %      NA=0 % #>           date    deaths_n #> 1:          NA           8 #> 2:          NA          14 #> 3:          NA           4  # Collapsing down to different levels, without healing the dataset and without # removing the class splfmt_rts_data_v1 (this is uncommon) d[, .(deaths_n = sum(deaths_n), location_code = \"norge\"), keyby=.(granularity_time)] %>%   print() #>             [unified]   [context]       [unified] #>           <character>   <integer>     <character> #>                NA=0 %      NA=0 %          NA=0 % #>      granularity_time    deaths_n   location_code #> 1:                day           8           norge #> 2:            isoweek          14           norge #> 3:            isoyear           4           norge  # Collapsing to different levels, and removing the class splfmt_rts_data_v1 because # it is going to be used in new output/analyses d[, .(deaths_n = sum(deaths_n), location_code = \"norge\"), keyby=.(granularity_time)] %>%   spltidy::remove_class_splfmt_rts_data() %>%   print() #>    granularity_time deaths_n location_code #> 1:              day        8         norge #> 2:          isoweek       14         norge #> 3:          isoyear        4         norge"},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/spltidy.html","id":"summary","dir":"Articles","previous_headings":"splfmt_rts_data_v1","what":"Summary","title":"Introduction to spltidy","text":"need way easily summarize data structure dataset.","code":"spltidy::generate_test_data() %>%   spltidy::set_splfmt_rts_data_v1() %>%   summary() #>  #> granularity_time #> ✅ No errors #>  #> granularity_geo #> ✅ No errors #>  #> country_iso3 #> ✅ No errors #>  #> location_code #> ✅ No errors #>  #> border #> ❌ Errors: #> - NA exists (not allowed) #>  #> age #> ✅ No errors #>  #> sex #> ✅ No errors #>  #> isoyear #> ✅ No errors #>  #> isoweek #> ✅ No errors #>  #> isoyearweek #> ✅ No errors #>  #> season #> ✅ No errors #>  #> seasonweek #> ✅ No errors #>  #> calyear #> ✅ No errors #>  #> calmonth #> ✅ No errors #>  #> calyearmonth #> ✅ No errors #>  #> date #> ✅ No errors #> granularity_time (character): #>  - isoweek (n = 33) #> granularity_geo (character): #>  - county (n = 33) #> country_iso3 (character): #>  - nor (n = 33) #> location_code (character) #> border (integer): #>  - <NA> (n = 33) #> age (character): #>  - <NA>    (n = 11) #>  - 000_005 (n = 11) #>  - total   (n = 11) #> sex (character): #>  - <NA>  (n = 11) #>  - total (n = 22) #> isoyear (integer): #>  - 2022 (n = 33) #> isoweek (integer) #> isoyearweek (character) #> season (character): #>  - 2021/2022 (n = 33) #> seasonweek (numeric) #> calyear (integer) #> calmonth (integer) #> calyearmonth (character) #> date (Date) #> deaths_n (integer)"},{"path":"https://docs.sykdomspulsen.no/spltidy/articles/spltidy.html","id":"identifying-data-structure-of-one-column","dir":"Articles","previous_headings":"splfmt_rts_data_v1","what":"Identifying data structure of one column","title":"Introduction to spltidy","text":"need way easily summarize data structure one column inside dataset.","code":"spltidy::generate_test_data() %>%   spltidy::set_splfmt_rts_data_v1() %>%   spltidy::identify_data_structure(\"deaths_n\") %>%   plot()"},{"path":"https://docs.sykdomspulsen.no/spltidy/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package proudly brought : Richard Aubrey White. Author, maintainer. . Copyright holder. See changelog contributors. 🙏","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"White RA (2022). spltidy: Helpful functions cleaning data. https://docs.sykdomspulsen./spltidy, https://github.com/sykdomspulsen-org/spltidy.","code":"@Manual{,   title = {spltidy: Helpful functions for cleaning data},   author = {Richard Aubrey White},   year = {2022},   note = {https://docs.sykdomspulsen.no/spltidy, https://github.com/sykdomspulsen-org/spltidy}, }"},{"path":[]},{"path":"https://docs.sykdomspulsen.no/spltidy/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Helpful functions for cleaning data","text":"spltidy contains helpful functions cleaning data. Read introduction vignette run help(package=\"spltidy\").","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/index.html","id":"splverse","dir":"","previous_headings":"","what":"splverse","title":"Helpful functions for cleaning data","text":"splverse set R packages developed help solve problems frequently occur performing infectious disease surveillance. want install dev versions (access packages haven’t released CRAN), run usethis::edit_r_profile() edit .Rprofile. write : Save file restart R. can now install splverse packages drat repository.","code":"options(   repos = structure(c(     SPLVERSE  = \"https://docs.sykdomspulsen.no/drat/\",     CRAN      = \"https://cran.rstudio.com\"   )) ) install.packages(\"spltidy\")"},{"path":"https://docs.sykdomspulsen.no/spltidy/license.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Folkehelseinstituttet Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/create_unified_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Create unified columns — create_unified_columns","title":"Create unified columns — create_unified_columns","text":"Creates pre-specified unified columns data formats.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/create_unified_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create unified columns — create_unified_columns","text":"","code":"create_unified_columns(x, ...)"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/create_unified_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create unified columns — create_unified_columns","text":"x object type splfmt_rts_data_v1 ... Arguments passed methods","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/create_unified_columns.html","id":"splfmt-rts-data-v-","dir":"Reference","previous_headings":"","what":"splfmt_rts_data_v1","title":"Create unified columns — create_unified_columns","text":"splfmt_rts_data_v1 contains 16 unified columns: granularity_time granularity_geo country_iso3 location_code border age sex isoyear isoweek isoyearweek season seasonweek calyear calmonth calyearmonth date details see vignette: vignette(\"splfmt_rts_data_v1\", package = \"spltidy\")","code":""},{"path":[]},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/expand_time_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand time to — expand_time_to","title":"Expand time to — expand_time_to","text":"Attempts expand dataset include time time series defined unique combination : granularity_time granularity_geo country_iso3 location_code border age sex *_id *_tag","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/expand_time_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand time to — expand_time_to","text":"","code":"expand_time_to(   x,   max_isoyear = NULL,   max_isoyearweek = NULL,   max_date = NULL,   ... )"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/expand_time_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand time to — expand_time_to","text":"x object type splfmt_rts_data_v1 max_isoyear Maximum isoyear max_isoyearweek Maximum isoyearweek max_date Maximum date ... used.","code":""},{"path":[]},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/generate_test_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate test data — generate_test_data","title":"Generate test data — generate_test_data","text":"Generates test data","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/generate_test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate test data — generate_test_data","text":"","code":"generate_test_data(fmt = \"splfmt_rts_data_v1\")"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/generate_test_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate test data — generate_test_data","text":"fmt Data format (splfmt_rts_data_v1)","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/generate_test_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate test data — generate_test_data","text":"","code":"spltidy::generate_test_data(\"splfmt_rts_data_v1\") #>     location_code granularity_time isoyearweek deaths_n isoyear     age   sex #>  1:      county42          isoweek     2022-03        3      NA    <NA>  <NA> #>  2:      county34          isoweek     2022-03        5      NA    <NA>  <NA> #>  3:      county15          isoweek     2022-03        3      NA    <NA>  <NA> #>  4:      county18          isoweek     2022-03        3      NA    <NA>  <NA> #>  5:      county03          isoweek     2022-03        3      NA    <NA>  <NA> #>  6:      county11          isoweek     2022-03        5      NA    <NA>  <NA> #>  7:      county54          isoweek     2022-03        5      NA    <NA>  <NA> #>  8:      county50          isoweek     2022-03        8      NA    <NA>  <NA> #>  9:      county38          isoweek     2022-03        2      NA    <NA>  <NA> #> 10:      county46          isoweek     2022-03        4      NA    <NA>  <NA> #> 11:      county30          isoweek     2022-03        7      NA    <NA>  <NA> #> 12:      county42          isoweek     2022-03        3    2022   total total #> 13:      county34          isoweek     2022-03        5    2022   total total #> 14:      county15          isoweek     2022-03        3    2022   total total #> 15:      county18          isoweek     2022-03        3    2022   total total #> 16:      county03          isoweek     2022-03        3    2022   total total #> 17:      county11          isoweek     2022-03        5    2022   total total #> 18:      county54          isoweek     2022-03        5    2022   total total #> 19:      county50          isoweek     2022-03        8    2022   total total #> 20:      county38          isoweek     2022-03        2    2022   total total #> 21:      county46          isoweek     2022-03        4    2022   total total #> 22:      county30          isoweek     2022-03        7    2022   total total #> 23:      county42          isoweek     2022-03        3    2022 000_005 total #> 24:      county34          isoweek     2022-03        5    2022 000_005 total #> 25:      county15          isoweek     2022-03        3    2022 000_005 total #> 26:      county18          isoweek     2022-03        3    2022 000_005 total #> 27:      county03          isoweek     2022-03        3    2022 000_005 total #> 28:      county11          isoweek     2022-03        5    2022 000_005 total #> 29:      county54          isoweek     2022-03        5    2022 000_005 total #> 30:      county50          isoweek     2022-03        8    2022 000_005 total #> 31:      county38          isoweek     2022-03        2    2022 000_005 total #> 32:      county46          isoweek     2022-03        4    2022 000_005 total #> 33:      county30          isoweek     2022-03        7    2022 000_005 total #>     location_code granularity_time isoyearweek deaths_n isoyear     age   sex"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/heal.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute missing values — heal","title":"Impute missing values — heal","text":"Tries impute missing values performing smart assignment columns missing data. E.g. location_code='norge' know granularity_geo='nation'.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/heal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute missing values — heal","text":"","code":"heal(x, ...)"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/heal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute missing values — heal","text":"x object type splfmt_rts_data_v1 ... used.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/heal.html","id":"splfmt-rts-data-v-","dir":"Reference","previous_headings":"","what":"splfmt_rts_data_v1","title":"Impute missing values — heal","text":"columns bold used impute listed columns. location_code: granularity_geo country_iso3 isoyear (granularity_time==\"isoyear\"): isoweek isoyearweek season seasonweek calyear calmonth calyearmonth date isoyearweek (granularity_time==\"isoweek\"): isoyear isoweek season seasonweek calyear calmonth calyearmonth date date (granularity_time==\"day\"): isoyear isoweek isoyearweek season seasonweek calyear calmonth calyearmonth regards time columns, granularity_time takes precedence everything. granularity_time missing, try impute granularity_time seeing one time column non-missing data. Due multitude time columns, granularity_time extremely important column always kept valid values.","code":""},{"path":[]},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/identify_data_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Hash the data structure of a dataset for a given column — identify_data_structure","title":"Hash the data structure of a dataset for a given column — identify_data_structure","text":"Reduces data structure column inside dataset something describes","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/identify_data_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hash the data structure of a dataset for a given column — identify_data_structure","text":"","code":"identify_data_structure(x, col, ...)"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/identify_data_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hash the data structure of a dataset for a given column — identify_data_structure","text":"x object col Column name hash ... Arguments passed methods","code":""},{"path":[]},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/identify_data_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hash the data structure of a dataset for a given column — identify_data_structure","text":"","code":"spltidy::generate_test_data() %>%   spltidy::set_splfmt_rts_data_v1() %>%   spltidy::identify_data_structure(\"deaths_n\") %>%   plot()"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/norway_covid19_cases_by_time_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — norway_covid19_cases_by_time_location","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — norway_covid19_cases_by_time_location","text":"data comes Norwegian Surveillance System Communicable Diseases (MSIS). date corresponds PCR-test taken.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/norway_covid19_cases_by_time_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — norway_covid19_cases_by_time_location","text":"","code":"norway_covid19_cases_by_time_location"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/norway_covid19_cases_by_time_location.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — norway_covid19_cases_by_time_location","text":"splfmt_rts_data_v1 11028 rows 18 variables: granularity_time day/isoweek granularity_geo nation, county country_iso3 location_code norge, 11 counties border 2020 age total isoyear Isoyear event isoweek Isoweek event isoyearweek Isoyearweek event season Season event seasonweek Seasonweek event calyear Calyear event calmonth Calmonth event calyearmonth Calyearmonth event date Date event covid19_cases_testdate_n Number confirmed covid19 cases covid19_cases_testdate_pr100000 Number confirmed covid19 cases per 100.000 population","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/norway_covid19_cases_by_time_location.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — norway_covid19_cases_by_time_location","text":"https://github.com/folkehelseinstituttet/surveillance_data/blob/master/covid19/_DOCUMENTATION_data_covid19_msis_by_time_location.txt","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/norway_covid19_cases_by_time_location.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — norway_covid19_cases_by_time_location","text":"raw number cases cases per 100.000 population recorded. data extracted 2022-05-04.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/norway_covid19_icu_and_hospitalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Norwegian Covid-19 data for ICU and hospitalization — norway_covid19_icu_and_hospitalization","title":"Norwegian Covid-19 data for ICU and hospitalization — norway_covid19_icu_and_hospitalization","text":"data extracted 2022-05-04.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/norway_covid19_icu_and_hospitalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Norwegian Covid-19 data for ICU and hospitalization — norway_covid19_icu_and_hospitalization","text":"","code":"norway_covid19_icu_and_hospitalization"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/norway_covid19_icu_and_hospitalization.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Norwegian Covid-19 data for ICU and hospitalization — norway_covid19_icu_and_hospitalization","text":"splfmt_rts_data_v1 919 rows 18 variables: granularity_time day/isoweek granularity_geo nation country_iso3 location_code norge border 2020 age total isoyear Isoyear event isoweek Isoweek event isoyearweek Isoyearweek event season Season event seasonweek Seasonweek event calyear Calyear event calmonth Calmonth event calyearmonth Calyearmonth event date Date event icu_with_positive_pcr_n Number new admissions ICU positive PCR test hospitalization_with_covid19_as_primary_cause_n Number new hospitalizations Covid-19 primary cause","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/norway_covid19_icu_and_hospitalization.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Norwegian Covid-19 data for ICU and hospitalization — norway_covid19_icu_and_hospitalization","text":"https://github.com/folkehelseinstituttet/surveillance_data/blob/master/covid19/_DOCUMENTATION_data_covid19_hospital_by_time.txt","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/plot_epicurve.splfmt_rts_data_v1.html","id":null,"dir":"Reference","previous_headings":"","what":"Epicurve — plot_epicurve.splfmt_rts_data_v1","title":"Epicurve — plot_epicurve.splfmt_rts_data_v1","text":"Epicurve","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/plot_epicurve.splfmt_rts_data_v1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epicurve — plot_epicurve.splfmt_rts_data_v1","text":"","code":"# S3 method for splfmt_rts_data_v1 plot_epicurve(x, ...)"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/plot_epicurve.splfmt_rts_data_v1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Epicurve — plot_epicurve.splfmt_rts_data_v1","text":"x Dataset ... X","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/plot_epicurve.splfmt_rts_data_v1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Epicurve — plot_epicurve.splfmt_rts_data_v1","text":"","code":"splstyle::plot_epicurve(spltidy::norway_covid19_cases_by_time_location[location_code == \"county03\"], type = \"single\", var_y = \"covid19_cases_testdate_n\") #> [1] \"HELLO\""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/read_spl.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads an object in an encrypted file serialized to disk — read_spl","title":"Reads an object in an encrypted file serialized to disk — read_spl","text":"Reads object encrypted file serialized disk","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/read_spl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads an object in an encrypted file serialized to disk — read_spl","text":"","code":"read_spl(filepath, private_key_path = Sys.getenv(\"ENCRYPTR_ID_RSA\"))"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/read_spl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads an object in an encrypted file serialized to disk — read_spl","text":"filepath filepath (must end '.spl.encrypted' '.spl') private_key_path Path private key","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/remove_class_splfmt_rts_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove class splfmt_rts_data_* — remove_class_splfmt_rts_data","title":"Remove class splfmt_rts_data_* — remove_class_splfmt_rts_data","text":"Remove class splfmt_rts_data_*","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/remove_class_splfmt_rts_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove class splfmt_rts_data_* — remove_class_splfmt_rts_data","text":"","code":"remove_class_splfmt_rts_data(x)"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/remove_class_splfmt_rts_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove class splfmt_rts_data_* — remove_class_splfmt_rts_data","text":"x data.table","code":""},{"path":[]},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/remove_class_splfmt_rts_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove class splfmt_rts_data_* — remove_class_splfmt_rts_data","text":"","code":"x <- spltidy::generate_test_data() %>%   spltidy::set_splfmt_rts_data_v1() class(x) #> [1] \"splfmt_rts_data_v1\" \"data.table\"         \"data.frame\"         spltidy::remove_class_splfmt_rts_data(x) class(x) #> [1] \"data.table\" \"data.frame\""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/save_spl.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves (serializes) an encrypted object to disk — save_spl","title":"Saves (serializes) an encrypted object to disk — save_spl","text":"Saves (serializes) encrypted object disk","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/save_spl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves (serializes) an encrypted object to disk — save_spl","text":"","code":"save_spl(   x,   filepath,   nthreads = 1,   public_key_path = Sys.getenv(\"ENCRYPTR_ID_RSA_PUB\") )"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/save_spl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves (serializes) an encrypted object to disk — save_spl","text":"x object serialize filepath filepath (must end '.spl.encrypted' '.spl') nthreads Number threads use. Default 1. public_key_path Path public key","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/set_splfmt_rts_data_v1.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data.table to splfmt_rts_data_v1 — set_splfmt_rts_data_v1","title":"Convert data.table to splfmt_rts_data_v1 — set_splfmt_rts_data_v1","text":"set_splfmt_rts_data_v1 converts data.table splfmt_rts_data_v1 reference. splfmt_rts_data_v1 creates new splfmt_rts_data_v1 (reference) either data.table data.frame.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/set_splfmt_rts_data_v1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data.table to splfmt_rts_data_v1 — set_splfmt_rts_data_v1","text":"","code":"set_splfmt_rts_data_v1(x, create_unified_columns = TRUE, heal = TRUE)  splfmt_rts_data_v1(x, create_unified_columns = TRUE, heal = TRUE)"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/set_splfmt_rts_data_v1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data.table to splfmt_rts_data_v1 — set_splfmt_rts_data_v1","text":"x data.table converted splfmt_rts_data_v1 create_unified_columns want create_unified_columns? heal want heal creation?","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/set_splfmt_rts_data_v1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data.table to splfmt_rts_data_v1 — set_splfmt_rts_data_v1","text":"extended data.table, modified reference returned (invisibly).","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/set_splfmt_rts_data_v1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert data.table to splfmt_rts_data_v1 — set_splfmt_rts_data_v1","text":"details see vignette: vignette(\"splfmt_rts_data_v1\", package = \"spltidy\")","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/set_splfmt_rts_data_v1.html","id":"smart-assignment","dir":"Reference","previous_headings":"","what":"Smart assignment","title":"Convert data.table to splfmt_rts_data_v1 — set_splfmt_rts_data_v1","text":"splfmt_rts_data_v1 contains smart assignment feature time geography. variables bold assigned using :=, listed variables automatically imputed. location_code: granularity_geo country_iso3 isoyear: granularity_time isoweek isoyearweek season seasonweek calyear calmonth calyearmonth date isoyearweek: granularity_time isoyear isoweek season seasonweek calyear calmonth calyearmonth date date: granularity_time isoyear isoweek isoyearweek season seasonweek calyear calmonth calyearmonth","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/set_splfmt_rts_data_v1.html","id":"unified-columns","dir":"Reference","previous_headings":"","what":"Unified columns","title":"Convert data.table to splfmt_rts_data_v1 — set_splfmt_rts_data_v1","text":"splfmt_rts_data_v1 contains 16 unified columns: granularity_time granularity_geo country_iso3 location_code border age sex isoyear isoweek isoyearweek season seasonweek calyear calmonth calyearmonth date","code":""},{"path":[]},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/set_splfmt_rts_data_v1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data.table to splfmt_rts_data_v1 — set_splfmt_rts_data_v1","text":"","code":"# Create some fake data as data.table d <- spltidy::generate_test_data(fmt = \"splfmt_rts_data_v1\") d <- d[1:5]  # convert to splfmt_rts_data_v1 by reference spltidy::set_splfmt_rts_data_v1(d, create_unified_columns = TRUE)  # d[1, isoyearweek := \"2021-01\"] d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoweek            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:            isoweek            county            nor        county18 #> 5:            isoweek            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2022           3       2022-03 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2022           3       2022-03 #> 5:          NA            NA            NA        2022           3       2022-03 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>           NA=0 %       NA=0 %    NA=100 %    NA=100 %       NA=100 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:     2021/2022           26          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2021/2022           26          NA          NA             NA #> 5:     2021/2022           26          NA          NA             NA #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           4 #> 2:   2022-01-23           6 #> 3:   2022-01-23           6 #> 4:   2022-01-23          12 #> 5:   2022-01-23           7 #>  d[2, isoyear := 2019] d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoyear            county            nor        county34 #> 3:            isoweek            county            nor        county15 #> 4:            isoweek            county            nor        county18 #> 5:            isoweek            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2019          52       2019-52 #> 3:          NA            NA            NA        2022           3       2022-03 #> 4:          NA            NA            NA        2022           3       2022-03 #> 5:          NA            NA            NA        2022           3       2022-03 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>          NA=20 %      NA=20 %    NA=100 %    NA=100 %       NA=100 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:     2021/2022           26          NA          NA             NA #> 4:     2021/2022           26          NA          NA             NA #> 5:     2021/2022           26          NA          NA             NA #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           4 #> 2:   2019-12-29           6 #> 3:   2022-01-23           6 #> 4:   2022-01-23          12 #> 5:   2022-01-23           7 #>  d[3, date := as.Date(\"2020-01-01\")] d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoyear            county            nor        county34 #> 3:                day            county            nor        county15 #> 4:            isoweek            county            nor        county18 #> 5:            isoweek            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2019          52       2019-52 #> 3:          NA            NA            NA        2020           1       2020-01 #> 4:          NA            NA            NA        2022           3       2022-03 #> 5:          NA            NA            NA        2022           3       2022-03 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>          NA=20 %      NA=20 %     NA=80 %     NA=80 %        NA=80 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:     2019/2020           24        2020           1       2020-M01 #> 4:     2021/2022           26          NA          NA             NA #> 5:     2021/2022           26          NA          NA             NA #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           4 #> 2:   2019-12-29           6 #> 3:   2020-01-01           6 #> 4:   2022-01-23          12 #> 5:   2022-01-23           7 #>  d[4, c(\"isoyear\", \"isoyearweek\") := .(2021, \"2021-01\")] #> Warning: Multiple time variables specified. Smart-assignment disabled. d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoyear            county            nor        county34 #> 3:                day            county            nor        county15 #> 4:            isoweek            county            nor        county18 #> 5:            isoweek            county            nor        county03 #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2019          52       2019-52 #> 3:          NA            NA            NA        2020           1       2020-01 #> 4:          NA            NA            NA        2021           3       2021-01 #> 5:          NA            NA            NA        2022           3       2022-03 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>          NA=20 %      NA=20 %     NA=80 %     NA=80 %        NA=80 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:     2019/2020           24        2020           1       2020-M01 #> 4:     2021/2022           26          NA          NA             NA #> 5:     2021/2022           26          NA          NA             NA #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           4 #> 2:   2019-12-29           6 #> 3:   2020-01-01           6 #> 4:   2022-01-23          12 #> 5:   2022-01-23           7 #>  d[5, c(\"location_code\") := .(\"norge\")] d #>             [unified]         [unified]      [unified]       [unified] #>           <character>       <character>    <character>     <character> #>                NA=0 %            NA=0 %         NA=0 %          NA=0 % #>      granularity_time   granularity_geo   country_iso3   location_code #> 1:            isoweek            county            nor        county42 #> 2:            isoyear            county            nor        county34 #> 3:                day            county            nor        county15 #> 4:            isoweek            county            nor        county18 #> 5:            isoweek            nation            nor           norge #>  #>      [unified]     [unified]     [unified]   [unified]   [unified]     [unified] #>      <integer>   <character>   <character>   <integer>   <integer>   <character> #>       NA=100 %      NA=100 %      NA=100 %      NA=0 %      NA=0 %        NA=0 % #>         border           age           sex     isoyear     isoweek   isoyearweek #> 1:          NA            NA            NA        2021           1       2021-01 #> 2:          NA            NA            NA        2019          52       2019-52 #> 3:          NA            NA            NA        2020           1       2020-01 #> 4:          NA            NA            NA        2021           3       2021-01 #> 5:          NA            NA            NA        2022           3       2022-03 #>  #>        [unified]    [unified]   [unified]   [unified]      [unified] #>      <character>    <numeric>   <integer>   <integer>    <character> #>          NA=20 %      NA=20 %     NA=80 %     NA=80 %        NA=80 % #>           season   seasonweek     calyear    calmonth   calyearmonth #> 1:     2020/2021           24          NA          NA             NA #> 2:            NA           NA          NA          NA             NA #> 3:     2019/2020           24        2020           1       2020-M01 #> 4:     2021/2022           26          NA          NA             NA #> 5:     2021/2022           26          NA          NA             NA #>  #>       [unified]   [context] #>          <Date>   <integer> #>          NA=0 %      NA=0 % #>            date    deaths_n #> 1:   2021-01-10           4 #> 2:   2019-12-29           6 #> 3:   2020-01-01           6 #> 4:   2022-01-23          12 #> 5:   2022-01-23           7 #>   # Investigating the data structure of one column inside a dataset spltidy::generate_test_data() %>%   spltidy::set_splfmt_rts_data_v1() %>%   spltidy::identify_data_structure(\"deaths_n\") %>%   plot()  # Investigating the data structure via summary spltidy::generate_test_data() %>%   spltidy::set_splfmt_rts_data_v1() %>%   summary() #>  #> granularity_time #> ✅ No errors #>  #> granularity_geo #> ✅ No errors #>  #> country_iso3 #> ✅ No errors #>  #> location_code #> ✅ No errors #>  #> border #> ❌ Errors: #> - NA exists (not allowed) #>  #> age #> ✅ No errors #>  #> sex #> ✅ No errors #>  #> isoyear #> ✅ No errors #>  #> isoweek #> ✅ No errors #>  #> isoyearweek #> ✅ No errors #>  #> season #> ✅ No errors #>  #> seasonweek #> ✅ No errors #>  #> calyear #> ✅ No errors #>  #> calmonth #> ✅ No errors #>  #> calyearmonth #> ✅ No errors #>  #> date #> ✅ No errors #> granularity_time (character): #> \t- isoweek (n = 33) #> granularity_geo (character): #> \t- county (n = 33) #> country_iso3 (character): #> \t- nor (n = 33) #> location_code (character) #> border (integer): #> \t- <NA> (n = 33) #> age (character): #> \t- 000_005 (n = 11) #> \t- <NA>    (n = 11) #> \t- total   (n = 11) #> sex (character): #> \t- <NA>  (n = 11) #> \t- total (n = 22) #> isoyear (integer): #> \t- 2022 (n = 33) #> isoweek (integer) #> isoyearweek (character) #> season (character): #> \t- 2021/2022 (n = 33) #> seasonweek (numeric) #> calyear (integer) #> calmonth (integer) #> calyearmonth (character) #> date (Date) #> deaths_n (integer) #>"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/unique_time_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique time series — unique_time_series","title":"Unique time series — unique_time_series","text":"Attempts identify unique time series exist dataset. time series defined unique combination : granularity_time granularity_geo country_iso3 location_code border age sex *_id *_tag","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/unique_time_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique time series — unique_time_series","text":"","code":"unique_time_series(x, set_time_series_id = FALSE, ...)"},{"path":"https://docs.sykdomspulsen.no/spltidy/reference/unique_time_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique time series — unique_time_series","text":"x object type splfmt_rts_data_v1 set_time_series_id TRUE, x new column called 'time_series_id' ... used.","code":""},{"path":[]},{"path":"https://docs.sykdomspulsen.no/spltidy/news/index.html","id":"spltidy-2022531","dir":"Changelog","previous_headings":"","what":"spltidy 2022.5.31","title":"spltidy 2022.5.31","text":"splfmt_rts_v1, age now uses underscores instead hyphens valid variable names generated converting wide-format.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/news/index.html","id":"spltidy-2022525","dir":"Changelog","previous_headings":"","what":"spltidy 2022.5.25","title":"spltidy 2022.5.25","text":"Dataset covid19_msis_cases_by_time_location renamed norway_covid19_cases_by_time_location. splfmt_rts_v1, granularity_time “ongoing event” changed event_*9999_01_01 event*_9999_09_09. done isoyear 9999-01-01 9998 (confusing), isoyear 9999-09-09 9999 (makes sense). splfmt_rts_v1, missing value sex age changed “missing” instead NA_character_. chosen NA_character_ requires special manipulation functions (.na) makes post-processing data less efficient end-user. splfmt_rts_v1, spltidy::heal now works granularity_time==’event_*’","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/news/index.html","id":"spltidy-2022519","dir":"Changelog","previous_headings":"","what":"spltidy 2022.5.19","title":"spltidy 2022.5.19","text":"Dataset covid19_msis_cases_by_time_location included, containing number Covid19 cases MSIS registry. locations national county level. percentage per 100.000 population included. time period 2020-02-21 2022-05-03 (data extracted 2022-05-04).","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/news/index.html","id":"spltidy-202255","dir":"Changelog","previous_headings":"","what":"spltidy 2022.5.5","title":"spltidy 2022.5.5","text":"Dataset norway_covid19_icu_and_hospitalization included, containing admissions ICU positive PCR test number new hospitalizations Covid-19 primary cause 2020-02-21 2022-05-03 (data extracted 2022-05-04).","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/news/index.html","id":"spltidy-2022426","dir":"Changelog","previous_headings":"","what":"spltidy 2022.4.26","title":"spltidy 2022.4.26","text":"save_spl, read_spl functions save/read data efficiently, allowing passwordless encryption.","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/news/index.html","id":"spltidy-2022422","dir":"Changelog","previous_headings":"","what":"spltidy 2022.4.22","title":"spltidy 2022.4.22","text":"print.splfmt_rts_data_v1 now automatically rounds numerics 4 decimal places","code":""},{"path":"https://docs.sykdomspulsen.no/spltidy/news/index.html","id":"spltidy-202247","dir":"Changelog","previous_headings":"","what":"spltidy 2022.4.7","title":"spltidy 2022.4.7","text":"unique_time_series function added.","code":""}]
